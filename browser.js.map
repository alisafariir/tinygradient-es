{"version":3,"file":"browser.js","sources":["index.js"],"sourcesContent":["const tinycolor = require('tinycolor2');\r\n\r\n/**\r\n * @typedef {Object} TinyGradient.StopInput\r\n * @property {ColorInput} color\r\n * @property {number} pos\r\n */\r\n\r\n/**\r\n * @typedef {Object} TinyGradient.StepValue\r\n * @type {number} [r]\r\n * @type {number} [g]\r\n * @type {number} [b]\r\n * @type {number} [h]\r\n * @type {number} [s]\r\n * @type {number} [v]\r\n * @type {number} [a]\r\n */\r\n\r\n/**\r\n * @type {StepValue}\r\n */\r\nconst RGBA_MAX = { r: 256, g: 256, b: 256, a: 1 };\r\n\r\n/**\r\n * @type {StepValue}\r\n */\r\nconst HSVA_MAX = { h: 360, s: 1, v: 1, a: 1 };\r\n\r\n/**\r\n * Linearly compute the step size between start and end (not normalized)\r\n * @param {StepValue} start\r\n * @param {StepValue} end\r\n * @param {number} steps - number of desired steps\r\n * @return {StepValue}\r\n */\r\nfunction stepize(start, end, steps) {\r\n    let step = {};\r\n\r\n    for (let k in start) {\r\n        if (start.hasOwnProperty(k)) {\r\n            step[k] = steps === 0 ? 0 : (end[k] - start[k]) / steps;\r\n        }\r\n    }\r\n\r\n    return step;\r\n}\r\n\r\n/**\r\n * Compute the final step color\r\n * @param {StepValue} step - from `stepize`\r\n * @param {StepValue} start\r\n * @param {number} i - color index\r\n * @param {StepValue} max - rgba or hsva of maximum values for each channel\r\n * @return {StepValue}\r\n */\r\nfunction interpolate(step, start, i, max) {\r\n    let color = {};\r\n\r\n    for (let k in start) {\r\n        if (start.hasOwnProperty(k)) {\r\n            color[k] = step[k] * i + start[k];\r\n            color[k] = color[k] < 0 ? color[k] + max[k] : (max[k] !== 1 ? color[k] % max[k] : color[k]);\r\n        }\r\n    }\r\n\r\n    return color;\r\n}\r\n\r\n/**\r\n * Generate gradient with RGBa interpolation\r\n * @param {StopInput} stop1\r\n * @param {StopInput} stop2\r\n * @param {number} steps\r\n * @return {tinycolor[]} color1 included, color2 excluded\r\n */\r\nfunction interpolateRgb(stop1, stop2, steps) {\r\n    const start = stop1.color.toRgb();\r\n    const end = stop2.color.toRgb();\r\n    const step = stepize(start, end, steps);\r\n    let gradient = [stop1.color];\r\n\r\n    for (let i = 1; i < steps; i++) {\r\n        const color = interpolate(step, start, i, RGBA_MAX);\r\n        gradient.push(tinycolor(color));\r\n    }\r\n\r\n    return gradient;\r\n}\r\n\r\n/**\r\n * Generate gradient with HSVa interpolation\r\n * @param {StopInput} stop1\r\n * @param {StopInput} stop2\r\n * @param {number} steps\r\n * @param {boolean|'long'|'short'} mode\r\n * @return {tinycolor[]} color1 included, color2 excluded\r\n */\r\nfunction interpolateHsv(stop1, stop2, steps, mode) {\r\n    const start = stop1.color.toHsv();\r\n    const end = stop2.color.toHsv();\r\n\r\n    // rgb interpolation if one of the steps in grayscale\r\n    if (start.s === 0 || end.s === 0) {\r\n        return interpolateRgb(stop1, stop2, steps);\r\n    }\r\n\r\n    let trigonometric;\r\n    if (typeof mode === 'boolean') {\r\n        trigonometric = mode;\r\n    }\r\n    else {\r\n        const trigShortest = (start.h < end.h && end.h - start.h < 180) || (start.h > end.h && start.h - end.h > 180);\r\n        trigonometric = (mode === 'long' && trigShortest) || (mode === 'short' && !trigShortest);\r\n    }\r\n\r\n    const step = stepize(start, end, steps);\r\n    let gradient = [stop1.color];\r\n\r\n    // recompute hue\r\n    let diff;\r\n    if ((start.h <= end.h && !trigonometric) || (start.h >= end.h && trigonometric)) {\r\n        diff = end.h - start.h;\r\n    }\r\n    else if (trigonometric) {\r\n        diff = 360 - end.h + start.h;\r\n    }\r\n    else {\r\n        diff = 360 - start.h + end.h;\r\n    }\r\n    step.h = Math.pow(-1, trigonometric ? 1 : 0) * Math.abs(diff) / steps;\r\n\r\n    for (let i = 1; i < steps; i++) {\r\n        const color = interpolate(step, start, i, HSVA_MAX);\r\n        gradient.push(tinycolor(color));\r\n    }\r\n\r\n    return gradient;\r\n}\r\n\r\n/**\r\n * Compute substeps between each stops\r\n * @param {StopInput[]} stops\r\n * @param {number} steps\r\n * @return {number[]}\r\n */\r\nfunction computeSubsteps(stops, steps) {\r\n    const l = stops.length;\r\n\r\n    // validation\r\n    steps = parseInt(steps, 10);\r\n\r\n    if (isNaN(steps) || steps < 2) {\r\n        throw new Error('Invalid number of steps (< 2)');\r\n    }\r\n    if (steps < l) {\r\n        throw new Error('Number of steps cannot be inferior to number of stops');\r\n    }\r\n\r\n    // compute substeps from stop positions\r\n    let substeps = [];\r\n\r\n    for (let i = 1; i < l; i++) {\r\n        const step = (steps - 1) * (stops[i].pos - stops[i - 1].pos);\r\n        substeps.push(Math.max(1, Math.round(step)));\r\n    }\r\n\r\n    // adjust number of steps\r\n    let totalSubsteps = 1;\r\n    for (let n = l - 1; n--;) totalSubsteps += substeps[n];\r\n\r\n    while (totalSubsteps !== steps) {\r\n        if (totalSubsteps < steps) {\r\n            const min = Math.min.apply(null, substeps);\r\n            substeps[substeps.indexOf(min)]++;\r\n            totalSubsteps++;\r\n        }\r\n        else {\r\n            const max = Math.max.apply(null, substeps);\r\n            substeps[substeps.indexOf(max)]--;\r\n            totalSubsteps--;\r\n        }\r\n    }\r\n\r\n    return substeps;\r\n}\r\n\r\n/**\r\n * Compute the color at a specific position\r\n * @param {StopInput[]} stops\r\n * @param {number} pos\r\n * @param {string} method\r\n * @param {StepValue} max\r\n * @returns {tinycolor}\r\n */\r\nfunction computeAt(stops, pos, method, max) {\r\n    if (pos < 0 || pos > 1) {\r\n        throw new Error('Position must be between 0 and 1');\r\n    }\r\n\r\n    let start, end;\r\n    for (let i = 0, l = stops.length; i < l - 1; i++) {\r\n        if (pos >= stops[i].pos && pos < stops[i + 1].pos) {\r\n            start = stops[i];\r\n            end = stops[i + 1];\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (!start) {\r\n        start = end = stops[stops.length - 1];\r\n    }\r\n\r\n    const step = stepize(start.color[method](), end.color[method](), (end.pos - start.pos) * 100);\r\n    const color = interpolate(step, start.color[method](), (pos - start.pos) * 100, max);\r\n    return tinycolor(color);\r\n}\r\n\r\nclass TinyGradient {\r\n    /**\r\n     * @param {StopInput[]|ColorInput[]} stops\r\n     * @returns {TinyGradient}\r\n     */\r\n    constructor(stops) {\r\n        // validation\r\n        if (stops.length < 2) {\r\n            throw new Error('Invalid number of stops (< 2)');\r\n        }\r\n\r\n        const havingPositions = stops[0].pos !== undefined;\r\n        let l = stops.length;\r\n        let p = -1;\r\n        let lastColorLess = false;\r\n        // create tinycolor objects and clean positions\r\n        this.stops = stops.map((stop, i) => {\r\n            const hasPosition = stop.pos !== undefined;\r\n            if (havingPositions ^ hasPosition) {\r\n                throw new Error('Cannot mix positionned and not posionned color stops');\r\n            }\r\n\r\n            if (hasPosition) {\r\n                const hasColor = stop.color !== undefined;\r\n                if (!hasColor && (lastColorLess || i === 0 || i === l - 1)) {\r\n                    throw new Error('Cannot define two consecutive position-only stops');\r\n                }\r\n                lastColorLess = !hasColor;\r\n\r\n                stop = {\r\n                    color    : hasColor ? tinycolor(stop.color) : null,\r\n                    colorLess: !hasColor,\r\n                    pos      : stop.pos\r\n                };\r\n\r\n                if (stop.pos < 0 || stop.pos > 1) {\r\n                    throw new Error('Color stops positions must be between 0 and 1');\r\n                }\r\n                else if (stop.pos < p) {\r\n                    throw new Error('Color stops positions are not ordered');\r\n                }\r\n                p = stop.pos;\r\n            }\r\n            else {\r\n                stop = {\r\n                    color: tinycolor(stop.color !== undefined ? stop.color : stop),\r\n                    pos  : i / (l - 1)\r\n                };\r\n            }\r\n\r\n            return stop;\r\n        });\r\n\r\n        if (this.stops[0].pos !== 0) {\r\n            this.stops.unshift({\r\n                color: this.stops[0].color,\r\n                pos  : 0\r\n            });\r\n            l++;\r\n        }\r\n        if (this.stops[l - 1].pos !== 1) {\r\n            this.stops.push({\r\n                color: this.stops[l - 1].color,\r\n                pos  : 1\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return new instance with reversed stops\r\n     * @return {TinyGradient}\r\n     */\r\n    reverse() {\r\n        let stops = [];\r\n\r\n        this.stops.forEach(function (stop) {\r\n            stops.push({\r\n                color: stop.color,\r\n                pos  : 1 - stop.pos\r\n            });\r\n        });\r\n\r\n        return new TinyGradient(stops.reverse());\r\n    }\r\n\r\n    /**\r\n     * Return new instance with looped stops\r\n     * @return {TinyGradient}\r\n     */\r\n    loop() {\r\n        let stops1 = [];\r\n        let stops2 = [];\r\n\r\n        this.stops.forEach((stop) => {\r\n            stops1.push({\r\n                color: stop.color,\r\n                pos  : stop.pos / 2\r\n            });\r\n        });\r\n\r\n        this.stops.slice(0, -1).forEach((stop) => {\r\n            stops2.push({\r\n                color: stop.color,\r\n                pos  : 1 - stop.pos / 2\r\n            });\r\n        });\r\n\r\n        return new TinyGradient(stops1.concat(stops2.reverse()));\r\n    }\r\n\r\n    /**\r\n     * Generate gradient with RGBa interpolation\r\n     * @param {number} steps\r\n     * @return {tinycolor[]}\r\n     */\r\n    rgb(steps) {\r\n        const substeps = computeSubsteps(this.stops, steps);\r\n        let gradient = [];\r\n\r\n        this.stops.forEach((stop, i) => {\r\n            if (stop.colorLess) {\r\n                stop.color = interpolateRgb(this.stops[i - 1], this.stops[i + 1], 2)[1];\r\n            }\r\n        });\r\n\r\n        for (let i = 0, l = this.stops.length; i < l - 1; i++) {\r\n            const rgb = interpolateRgb(this.stops[i], this.stops[i + 1], substeps[i]);\r\n            gradient.splice(gradient.length, 0, ...rgb);\r\n        }\r\n\r\n        gradient.push(this.stops[this.stops.length - 1].color);\r\n\r\n        return gradient;\r\n    }\r\n\r\n    /**\r\n     * Generate gradient with HSVa interpolation\r\n     * @param {number} steps\r\n     * @param {boolean|'long'|'short'} [mode=false]\r\n     *    - false to step in clockwise\r\n     *    - true to step in trigonometric order\r\n     *    - 'short' to use the shortest way\r\n     *    - 'long' to use the longest way\r\n     * @return {tinycolor[]}\r\n     */\r\n    hsv(steps, mode) {\r\n        const substeps = computeSubsteps(this.stops, steps);\r\n        let gradient = [];\r\n\r\n        this.stops.forEach((stop, i) => {\r\n            if (stop.colorLess) {\r\n                stop.color = interpolateHsv(this.stops[i - 1], this.stops[i + 1], 2, mode)[1];\r\n            }\r\n        });\r\n\r\n        for (let i = 0, l = this.stops.length; i < l - 1; i++) {\r\n            const hsv = interpolateHsv(this.stops[i], this.stops[i + 1], substeps[i], mode);\r\n            gradient.splice(gradient.length, 0, ...hsv);\r\n        }\r\n\r\n        gradient.push(this.stops[this.stops.length - 1].color);\r\n\r\n        return gradient;\r\n    }\r\n\r\n    /**\r\n     * Generate CSS3 command (no prefix) for this gradient\r\n     * @param {String} [mode=linear] - 'linear' or 'radial'\r\n     * @param {String} [direction] - default is 'to right' or 'ellipse at center'\r\n     * @return {String}\r\n     */\r\n    css(mode, direction) {\r\n        mode = mode || 'linear';\r\n        direction = direction || (mode === 'linear' ? 'to right' : 'ellipse at center');\r\n\r\n        let css = mode + '-gradient(' + direction;\r\n        this.stops.forEach(function (stop) {\r\n            css += ', ' + (stop.colorLess ? '' : stop.color.toRgbString() + ' ') + (stop.pos * 100) + '%';\r\n        });\r\n        css += ')';\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Returns the color at specific position with RGBa interpolation\r\n     * @param {number} pos, between 0 and 1\r\n     * @return {tinycolor}\r\n     */\r\n    rgbAt(pos) {\r\n        return computeAt(this.stops, pos, 'toRgb', RGBA_MAX);\r\n    }\r\n\r\n    /**\r\n     * Returns the color at specific position with HSVa interpolation\r\n     * @param {number} pos, between 0 and 1\r\n     * @return {tinycolor}\r\n     */\r\n    hsvAt(pos) {\r\n        return computeAt(this.stops, pos, 'toHsv', HSVA_MAX);\r\n    }\r\n}\r\n\r\n/**\r\n * @param {StopInput[]|ColorInput[]|StopInput...|ColorInput...} stops\r\n * @returns {TinyGradient}\r\n */\r\nmodule.exports = function (stops) {\r\n    // varargs\r\n    if (arguments.length === 1) {\r\n        if (!Array.isArray(arguments[0])) {\r\n            throw new Error('\"stops\" is not an array');\r\n        }\r\n        stops = arguments[0];\r\n    }\r\n    else {\r\n        stops = Array.prototype.slice.call(arguments);\r\n    }\r\n\r\n    return new TinyGradient(stops);\r\n};\r\n"],"names":["RGBA_MAX","r","g","b","a","HSVA_MAX","h","s","v","stepize","start","end","steps","step","k","hasOwnProperty","interpolate","i","max","color","interpolateRgb","stop1","stop2","toRgb","gradient","push","tinycolor","interpolateHsv","mode","toHsv","trigonometric","trigShortest","diff","Math","pow","abs","computeSubsteps","stops","l","length","parseInt","isNaN","Error","substeps","pos","round","totalSubsteps","n","min","apply","indexOf","computeAt","method","TinyGradient","havingPositions","undefined","p","lastColorLess","map","stop","hasPosition","hasColor","colorLess","unshift","_proto","prototype","reverse","forEach","loop","stops1","stops2","slice","concat","rgb","_this","splice","hsv","_this2","css","direction","toRgbString","rgbAt","hsvAt","tinygradient","arguments","Array","isArray","call"],"mappings":"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"}